name: Dependency Updates & Security

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    paths:
      - 'pyproject.toml'
      - 'uv.lock'

env:
  PYTHON_VERSION: "3.12"

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
        
    - name: Run safety check
      run: |
        uv tool install safety
        uv tool run safety check --output json --save-json safety-report.json || true
        
    - name: Upload safety report
      uses: actions/upload-artifact@v4
      with:
        name: safety-report
        path: safety-report.json
        retention-days: 30
        
    - name: Run bandit security scan
      run: |
        uv tool install bandit
        uv tool run bandit -r src/ -f json -o bandit-report.json || true
        
    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json
        retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Update dependencies
      run: |
        # Update uv.lock file
        uv lock --upgrade
        
        # Check if there are changes
        if git diff --quiet uv.lock; then
          echo "No dependency updates available"
          echo "has_updates=false" >> $GITHUB_ENV
        else
          echo "Dependency updates found"
          echo "has_updates=true" >> $GITHUB_ENV
        fi
        
    - name: Install updated dependencies
      if: env.has_updates == 'true'
      run: |
        uv sync --all-extras --dev
        
    - name: Run tests with updated dependencies
      if: env.has_updates == 'true'
      run: |
        # Run a quick test suite to ensure updates don't break anything
        uv run pytest tests/unit/ tests/config/ -x --tb=short -m "not (ollama or slow)"
        
    - name: Create Pull Request
      if: env.has_updates == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: weekly dependency updates'
        body: |
          Automated dependency updates from scheduled workflow.
          
          ## Changes
          - Updated `uv.lock` with latest compatible versions
          - All tests pass with updated dependencies
          
          ## Security
          Please review the dependency changes for any security implications.
          
          Generated by GitHub Actions workflow.
        branch: chore/dependency-updates
        delete-branch: true
        
    - name: Enable auto-merge for dependency PRs
      if: env.has_updates == 'true'
      run: |
        # This would require additional setup with GitHub CLI or API
        echo "Consider enabling auto-merge for dependency PRs"

  check-outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Check for outdated dependencies
      run: |
        # Install current dependencies
        uv sync --all-extras --dev
        
        # Check for outdated packages (this will need to be implemented)
        echo "Checking for outdated dependencies..."
        
        # Create a report of current vs available versions
        uv tool install pip-audit
        uv tool run pip-audit --desc --format=json --output=outdated-report.json || true
        
    - name: Upload outdated dependencies report
      uses: actions/upload-artifact@v4
      with:
        name: outdated-report
        path: outdated-report.json
        retention-days: 7

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
        
    - name: Check licenses
      run: |
        uv tool install pip-licenses
        uv tool run pip-licenses --format=json --output-file=licenses-report.json
        
        # Check for problematic licenses (customize as needed)
        uv tool run pip-licenses --format=plain | grep -E "(GPL|AGPL)" || echo "No copyleft licenses found"
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: licenses-report
        path: licenses-report.json
        retention-days: 30