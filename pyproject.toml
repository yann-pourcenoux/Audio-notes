[project]
name = "audio-notes"
version = "0.1.0"
description = "AI-powered audio notes processing and transcription system"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core AI/ML libraries
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    # Audio processing
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "pydub>=0.25.0",
    # Data handling
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    # Utility libraries
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "tqdm>=4.65.0",
    # Configuration and logging
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "accelerate>=1.7.0",
    # Ollama integration
    "ollama>=0.5.0",
]

[project.scripts]
audio-notes = "audio_notes.cli:cli"
audio-notes-info = "audio_notes.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/audio_notes"]

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output and formatting
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--durations=10",

]

# Markers for test categorization
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "config: Configuration tests",
    "ollama: Ollama/AI tests (may require external service)",
    "error_handling: Error handling tests",
    "workflow: End-to-end workflow tests",
    "slow: Slow tests (may take >30s)",
    "network: Tests requiring network access",
]

# Minimum version requirements
minversion = "7.0"

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:transformers.*",
    "ignore::UserWarning:librosa.*",
]

# Logging configuration for tests
log_cli = false
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


[tool.uv]
dev-dependencies = ["jupyter>=1.0.0", "ipykernel>=6.0.0"]
